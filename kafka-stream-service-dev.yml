server:
  port: 8187
  servlet:
    context-path: /

spring:
  application:
    name: kafka-stream-service
  cloud:
    loadbalancer:
      ribbon:
        enabled: false

kafka-streams-service:
  custom-audience: kafka-streams-service

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html

retry-config:
  initial-interval-ms: 1000
  max-interval-ms: 60000
  multiplier: 2.0
  maxAttempts: 3
  sleep-time-ms: 2000

kafka-config:
  bootstrap-servers: localhost:19092, localhost:29092, localhost:39092
  schema-registry-url-key: schema.registry.url
  schema-registry-url: http://localhost:8081
  topic-names-to-create:
    - twitter-topic
    - twitter-analytics-topic
    - word-count-input
    - word-count-input

kafka-streams-config:
  application-id: kafka-streams-application
  input-topic-name: twitter-topic
  output-topic-name: twitter-analytics-topic
  state-file-location: ${HOME}/kafka-streaming-state
  word-count-store-name: word-count-store

word-count-streams-config:
  application-id: wordcount-streams-application
  input-topic-name: word-count-input
  output-topic-name: word-count-input
  state-file-location: ${HOME}/wordcount-streaming-state
  word-count-store-name: wordcount-count-store
